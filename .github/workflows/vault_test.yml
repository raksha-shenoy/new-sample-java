name: Deploy Workflows
#1
#2
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        type: choice
        options:
          - 'DEV'
          - 'QA'
          - 'PROD'

jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
  
     # - name: Install Vault CLI
      #  uses: hashicorp/setup-vault@v1
       # with:
        # vault-version: latest
      #- name: Install Vault CLI
       # run: |
        #   sudo apt-get update
         #  sudo apt-get install vault

         
      #- name: Authenticate with Vault
       # run: |
        #  export VAULT_ADDR="http://127.0.0.1:8200"
         # vault login -method=github token=${{ secrets.VAULT_GITHUB_TOKEN }}
  
      - name: Retrieve Secrets from Vault
        run: |
          export VAULT_ADDR="http://127.0.0.1:8200"
          MY_SECRET=$(vault kv get -field=/v1/secret/data/mysecret)
  
      - name: Use Secrets in Workflow
        run: |
          echo "MY_SECRET=${MY_SECRET}" >> $GITHUB_ENV
          # Use MY_SECRET in subsequent steps or jobs

  #release:
   # runs-on: ubuntu-latest
    #needs: build
    #steps:
    #- name: Checkout Repository
     # uses: actions/checkout@v2
      #with:
       # ref: master
        #token: ${{ secrets.NEW_SAMPLE_JAVA_TOKEN}}
 
#    - name: Download Artifacts
 #     uses: actions/download-artifact@v2
  #    with:
   #     name: java
    #    path: target/
 
#    - name: Set Release Version
 #     run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
 
#    - name: Tag Release
 #     run: |
 #       git config --global user.email "rakshha3@gmail.com"
  #      git config --global user.name "raksha-shenoy"
   #     git tag $RELEASE_VERSION
    #    git push origin $RELEASE_VERSION
    #- name: Release
    #  run: echo "Release"
    
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
         
     
          - name: Set up Environment
            run: echo "Setting up environment=${{ github.event.inputs.environment }}"
            env:
              ENVIRONMENT: ${{ github.event.inputs.environment }}
    deploy_dev:
        runs-on: ubuntu-latest
        needs: deploy
        environment: 'DEV'
        if: github.event.inputs.environment=='DEV'
        steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2
          with:
            name: java
            path: target/
     
        - name: Deploy to Dev
          run: echo "Deploying to Dev environment"
     
    deploy_qa:
        runs-on: ubuntu-latest
        needs: deploy
        environment: 'QA'
        if: github.event.inputs.environment=='QA'
        steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2
          with:
            name: java
            path: target/
     
        - name: Deploy to QA
          run: echo "Deploying to QA environment"
    
    deploy_prod:
        runs-on: ubuntu-latest
        needs: deploy
        environment: 'PROD'
        if: github.event.inputs.environment=='PROD'
     
        steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2
          with:
            name: java
            path: target/
     
        - name: Deploy to Prod
          run: echo "Deploying to Prod environment"
