name: Deploy Workflows
#1
#2
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        type: choice
        options:
          - 'DEV'
          - 'QA'
          - 'PROD'

jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
 
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
 
    - name: Build
      run: |
        mvn clean install
        mvn clean package
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java
        path: target/

  #release:
   # runs-on: ubuntu-latest
    #needs: build
    #steps:
    #- name: Checkout Repository
     # uses: actions/checkout@v2
      #with:
       # ref: master
        #token: ${{ secrets.NEW_SAMPLE_JAVA_TOKEN}}
 
#    - name: Download Artifacts
 #     uses: actions/download-artifact@v2
  #    with:
   #     name: java
    #    path: target/
 
#    - name: Set Release Version
 #     run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
 
#    - name: Tag Release
 #     run: |
 #       git config --global user.email "rakshha3@gmail.com"
  #      git config --global user.name "raksha-shenoy"
   #     git tag $RELEASE_VERSION
    #    git push origin $RELEASE_VERSION
    #- name: Release
    #  run: echo "Release"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
     
 
      - name: Set up Environment
        run: echo "Setting up environment=${{ github.event.inputs.environment }}"
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
  deploy_dev:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'DEV'
    if: github.event.inputs.environment=='DEV'
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to Dev
      run: echo "Deploying to Dev environment"
 
  deploy_qa:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'QA'
    if: github.event.inputs.environment=='QA'
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to QA
      run: echo "Deploying to QA environment"

  deploy_prod:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'PROD'
    if: github.event.inputs.environment=='PROD'
 
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to Prod
      run: echo "Deploying to Prod environment"
  release_tag:
      runs-on: ubuntu-latest
      needs: deploy
      
      steps:
        - name: Create release
          id: create_release_id
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.run_number }}
            release_name: Release ${{ github.run_number }}
           
     
  
        