name: Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        default: 'DEV'
        options:
          - 'DEV'
          - 'QA'
          - 'PROD'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable
        run: echo "DEPLOY_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: Deploy to selected environment
        run: |
          if [ "$DEPLOY_ENV" == "DEV" ]; then
            # Add deployment commands for dev environment
          elif [ "$DEPLOY_ENV" == "QA" ]; then
            # Add deployment commands for qa environment
          elif [ "$DEPLOY_ENV" == "PROD" ]; then
            # Add deployment commands for prod environment
          else
            echo "Invalid environment selected"
            exit 1
          fi
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
 
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
 
    - name: Build
      run: |
        mvn clean install
        mvn clean package
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java
        path: target/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: master
        token: ${{ secrets.NEW_SAMPLE_JAVA_TOKEN}}
 
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Set Release Version
      run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
 
    - name: Tag Release
      run: |
        git config --global user.email "rakshha3@gmail.com"
        git config --global user.name "raksha-shenoy"
        git tag $RELEASE_VERSION
        git push origin $RELEASE_VERSION
    - name: Release
      run: echo "Release"
  deploy_dev:
    runs-on: ubuntu-latest
    environment: 'DEV'
    needs: release
 
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to Dev
      run: echo "Deploying to Dev environment"
 
  deploy_qa:
    runs-on: ubuntu-latest
    needs: deploy_dev
    environment: 'QA'
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to QA
      run: echo "Deploying to QA environment"

  deploy_prod:
    runs-on: ubuntu-latest
    needs: deploy_qa
    environment: 'PROD'
 
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java
        path: target/
 
    - name: Deploy to Prod
      run: echo "Deploying to Prod environment"

